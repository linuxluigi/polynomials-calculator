<!DOCTYPE html>


<html xmlns="http://www.w3.org/1999/xhtml" lang="de">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>PolynomialList</title>
    
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" /> 
  </head>
  <body role="document">

    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../../../genindex.xhtml" title="Stichwortverzeichnis"
             accesskey="I">Index</a></li>
        <li class="right" >
          <a href="PolynomialListTest.xhtml" title="PolynomialListTest"
             accesskey="N">weiter</a> |</li>
        <li class="right" >
          <a href="Polynomial.xhtml" title="Polynomial"
             accesskey="P">zurück</a> |</li>
        <li class="nav-item nav-item-0"><a href="../../../index.xhtml">Polynomials Calculator 1.0.0 Dokumentation</a> &#187;</li>
          <li class="nav-item nav-item-1"><a href="../../../packages.xhtml" >Polynomials Calculator</a> &#187;</li>
          <li class="nav-item nav-item-2"><a href="package-index.xhtml" accesskey="U">com.linuxluigi.polynomial</a> &#187;</li> 
      </ul>
    </div>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="polynomiallist">
<h1>PolynomialList</h1>
<dl class="type">
<dt id="com.linuxluigi.polynomial.PolynomialList">
 class <code class="descname">PolynomialList</code></dt>
<dd><p>Ein Polynom Klasse Array welche mitunter folgende funktionen mitbringt:</p>
<ul class="simple">
<li>Einzelne Polynome aus den Polynom[] ausgeben</li>
<li>Polynome miteinander multiplizieren, addieren und subtrahieren</li>
<li>Einzelne Polynome löschen, bearbeiten oder neu hinzufügen</li>
<li>Polynom[] bilden durch laden einer Json Datei</li>
<li>Die eigene Klasse als Json Datei speichern</li>
</ul>
</dd></dl>

<div class="section" id="constructors">
<h2>Constructors</h2>
<div class="section" id="id1">
<h3>PolynomialList</h3>
<dl class="constructor">
<dt id="com.linuxluigi.polynomial.PolynomialList.PolynomialList()">
public <code class="descname">PolynomialList</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Konstruktor Erstellt ein neues leeres Polynomial[]</p>
</dd></dl>

</div>
</div>
<div class="section" id="methods">
<h2>Methods</h2>
<div class="section" id="add">
<h3>add</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.add(Polynomial)">
public void <code class="descname">add</code><span class="sig-paren">(</span><a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> newPolynomial</em><span class="sig-paren">)</span></dt>
<dd><p>Hängt ein neues Polynomial an Polynomial[] an</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first last simple">
<li><strong>newPolynomial</strong> &#8211; neues Polynomial welches angehängt werden soll</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="delte">
<h3>delte</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.delte(int)">
 void <code class="descname">delte</code><span class="sig-paren">(</span>int<em> PolynomialNumber</em><span class="sig-paren">)</span></dt>
<dd><p>Löscht ein Element aus den Polynomial[]</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first last simple">
<li><strong>PolynomialNumber</strong> &#8211; Element des Polynomial[] welches gelöscht werden soll</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="get-filename">
<h3>get_FileName</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.get_FileName()">
 <a class="reference external" href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html" title="java.lang.String">String</a><span class="link-target"> [http://docs.oracle.com/javase/6/docs/api/java/lang/String.html]</span> <code class="descname">get_FileName</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Gibt den Json Datei String zurück</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Rückgabe:</th><td class="field-body">Json Datei namen als String</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="get-polyllist">
<h3>get_PolylList</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.get_PolylList()">
 <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a>[] <code class="descname">get_PolylList</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Gibt das Polynomial[] zurück</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Rückgabe:</th><td class="field-body">Polynomial[]</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="get-polynomial">
<h3>get_Polynomial</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.get_Polynomial(int)">
 <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a> <code class="descname">get_Polynomial</code><span class="sig-paren">(</span>int<em> PolynomialNumber</em><span class="sig-paren">)</span></dt>
<dd><p>Gibt ein einzelnes Polynomial aus dem Polynomial[] zurück</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first simple">
<li><strong>PolynomialNumber</strong> &#8211; Element des Polynomial[] welches zurück gegeben werden soll</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Rückgabe:</th><td class="field-body"><p class="first last">Polynomial Objekt</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="length">
<h3>length</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.length()">
public int <code class="descname">length</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Gibt die länge des Polynomial[] zurück</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Rückgabe:</th><td class="field-body">Int länge des Polynomial[]</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="load">
<h3>load</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.load()">
 void <code class="descname">load</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Ersetzt das vorhandene Polynomial[] mit der aus der this.file Json Datei angeben Werten Polynomial[]</p>
</dd></dl>

</div>
<div class="section" id="mathaddsub">
<h3>mathAddSub</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.mathAddSub(Polynomial, Polynomial, boolean)">
 <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a> <code class="descname">mathAddSub</code><span class="sig-paren">(</span><a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> Polynomial_1</em>, <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> Polynomial_2</em>, boolean<em> operator</em><span class="sig-paren">)</span></dt>
<dd><p>Addiert oder Subtraiert 2 Polynome miteinander, gibt dieses als Polynomial Klasse zurück und fügt es in Polynomial[] hinzu</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first simple">
<li><strong>Polynomial_1</strong> &#8211; Polynom 1 welche zu Polynom 2 addiert wird</li>
<li><strong>Polynomial_2</strong> &#8211; Polynom 2 welche zu Polynom 1 addiert wird</li>
<li><strong>operator</strong> &#8211; 1 == +, 0 == -</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Rückgabe:</th><td class="field-body"><p class="first last">Neues Polynomial welches durch die Berechnung entstand</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="mathhorner">
<h3>mathHorner</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.mathHorner(Polynomial, double)">
 double <code class="descname">mathHorner</code><span class="sig-paren">(</span><a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> Polynomial</em>, double<em> divisor</em><span class="sig-paren">)</span></dt>
<dd><p>Polynomdivision nach dem Horner Schema, bei erfogreicher Division wird das neue Polynom Polynomial[] angehängt</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first simple">
<li><strong>Polynomial</strong> &#8211; Polynom welches dividiert werden soll</li>
<li><strong>divisor</strong> &#8211; Die Zahl mit der das Polynom dividiert werden soll</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Rückgabe:</th><td class="field-body"><p class="first last">Rest in Double</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="mathmultiply">
<h3>mathMultiply</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.mathMultiply(Polynomial, Polynomial)">
 <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a> <code class="descname">mathMultiply</code><span class="sig-paren">(</span><a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> Polynomial_1</em>, <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> Polynomial_2</em><span class="sig-paren">)</span></dt>
<dd><p>Multipliziert 2 Polynome miteinander und speichert das Polynom in PolylList</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first simple">
<li><strong>Polynomial_1</strong> &#8211; Polynom 1 welches zu Polynom 2 multipliziert werden soll</li>
<li><strong>Polynomial_2</strong> &#8211; Polynom 2 welches zu Polynom 1 multipliziert werden soll</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Rückgabe:</th><td class="field-body"><p class="first last">neues multipliziertes Polynom</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="randompolynomial">
<h3>randomPolynomial</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.randomPolynomial(int, boolean)">
 <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a> <code class="descname">randomPolynomial</code><span class="sig-paren">(</span>int<em> length</em>, boolean<em> random</em><span class="sig-paren">)</span></dt>
<dd><p>Erstellt ein Polynomial mit der Länge length und wenn random wahr ist, mit festen Werten</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first simple">
<li><strong>length</strong> &#8211; länge des Beispiel Polynomes</li>
<li><strong>random</strong> &#8211; Polynom bekommt feste Werte zugewiesen mit [i] = i</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Rückgabe:</th><td class="field-body"><p class="first last">zufälliges neues Polynomial</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="randompolynomialarray">
<h3>randomPolynomialArray</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.randomPolynomialArray(int, int, boolean)">
 <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a>[] <code class="descname">randomPolynomialArray</code><span class="sig-paren">(</span>int<em> arrayLength</em>, int<em> PolynomialLength</em>, boolean<em> random</em><span class="sig-paren">)</span></dt>
<dd><p>Erstellt ein Polynomial[] mit zufalls Zahlen und arrayLength länge, die länge der Polynome wird mit PolynomialLength bestimmt</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first simple">
<li><strong>arrayLength</strong> &#8211; Länge von Polynomial[]</li>
<li><strong>PolynomialLength</strong> &#8211; Länge des Polynomial</li>
<li><strong>random</strong> &#8211; Polynom bekommt feste Werte zugewiesen mit [i] = i</li>
</ul>
</td>
</tr>
<tr class="field-even field"><th class="field-name">Rückgabe:</th><td class="field-body"><p class="first last">zufälliges neues Polynomial[]</p>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="save">
<h3>save</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.save()">
 void <code class="descname">save</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Speichert Polynomial[] in this.file angeben Datei als Json format ab</p>
</dd></dl>

</div>
<div class="section" id="set">
<h3>set</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.set(int, Polynomial)">
public void <code class="descname">set</code><span class="sig-paren">(</span>int<em> ArrayNumber</em>, <a class="reference internal" href="Polynomial.xhtml#com.linuxluigi.polynomial.Polynomial" title="com.linuxluigi.polynomial.Polynomial">Polynomial</a><em> newPolynomial</em><span class="sig-paren">)</span></dt>
<dd><p>Überschreibt ein Polynomial aus Polynomial[] mit einen neuem Polynomial</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first last simple">
<li><strong>ArrayNumber</strong> &#8211; Element nummer des zu überschreibenen Polynomial</li>
<li><strong>newPolynomial</strong> &#8211; Neues Polynomial welches das alte überschreiben soll</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
<div class="section" id="set-file">
<h3>set_file</h3>
<dl class="method">
<dt id="com.linuxluigi.polynomial.PolynomialList.set_file(String)">
 void <code class="descname">set_file</code><span class="sig-paren">(</span><a class="reference external" href="http://docs.oracle.com/javase/6/docs/api/java/lang/String.html" title="java.lang.String">String</a><span class="link-target"> [http://docs.oracle.com/javase/6/docs/api/java/lang/String.html]</span><em> FileName</em><span class="sig-paren">)</span></dt>
<dd><p>Setzt den Namen und Pfad der Json Datei</p>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field-odd field"><th class="field-name">Parameter:</th><td class="field-body"><ul class="first last simple">
<li><strong>FileName</strong> &#8211; Datei Namen und Pfad der neuen Json Datei</li>
</ul>
</td>
</tr>
</tbody>
</table>
</dd></dl>

</div>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>

    <div class="footer" role="contentinfo">
        &#169; Copyright 2016, Steffen Exler.
      Mit <a href="http://sphinx-doc.org/">Sphinx</a> 1.4.8 erstellt.
    </div>
  </body>
</html>